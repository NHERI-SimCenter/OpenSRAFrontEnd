Building the standalone python virtual environment


Mac OS

1) Get Python source
2) In Modules/Setup.dist Search for “SSL” and uncomment the code as shown below 

_socket socketmodule.c

# Socket module helper for SSL support; you must comment out the other
# socket line above, and possibly edit the SSL variable:
SSL=/usr/local/ssl
_ssl _ssl.c \
 -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
 -L$(SSL)/lib -lssl -lcrypto

3) Set the SSL=to the path to ssl in cellar or wherever on your system
4) cd the source folder and run ./configure --enable-optimizations --prefix=/Users/steve/Desktop/PythonEnv -> make sure that the prefix is an accessible place where you want to build the virtual env. 
5) Run make
6) Run make install
7) Use dylib bundler to bundle deps with the python 

/usr/local/Cellar/dylibbundler/0.4.5/bin/dylibbundler -od -b -p @loader_path/ -x /Users/steve/Desktop/PythonENV/bin/python3.8 -d /Users/steve/Desktop/PythonENV/bin/libs

8) It will save the deps to the lib folder. Copy and past them back to the bin folder and delete the libs folder.

9) Rename python3 to python

10) Run the below in pip

Note that the newer GDAL does not work with Fiona, had to use the older 3.1.4 version 

pip install wheel jpype1 - please first install this package first; incompatibility was observed when trying to install this package after the rest
 
Or

pip install wheel
pip install SciPy
pip install pandas 
pip install shapely
pip install GDAL==3.1.4
pip install fiona
pip install pyproj
pip install six
pip install rtree
pip install geopandas
pip install rasterio 


Windows

On a green system, need to install:
- Visual Studio 2017+
- Windows SDK, and 
- Cywgin with the following packages: autoconf, automake, libtool, and make 

First cd the directory containing the Standalone Python source:

Then from a Visual Studio 2017/2019 x64 native tools command prompt run:

py.exe build-windows.py --profile static-noopt -–sh C:\cygwin64\bin\sh.exe

Once Python is built, go the build folder and find it in the virtual env and scripts folder. 

Run the SSLScript.py file in the repo, in admin cmd to configure the SSL. 

Install the following dependencies thourgh pip in this exact order:
pip install wheel
pip install jpype1 - please first install this package first; incompatibility was observed when trying to install this package after the rest
pip install SciPy
pip install pipwin

pipwin install pandas 
pipwin install shapely
pipwin install GDAL==3.1.4
pipwin install fiona
pipwin install pyproj
pipwin install six
pipwin install rtree
pipwin install geopandas
pipwin install rasterio 

To deploy run:
C:\Qt\5.15.1\msvc2019_64\bin\windeployqt.exe C:\Users\Office\Desktop\OpenSRA\build-OpenSRA-Desktop_Qt_5_15_1_MSVC2019_64bit-Release\release\OpenSRA.exe
